const { gql } = require('apollo-server-express');

const typeDefs = gql`
  scalar Date
  scalar JSON
  scalar ObjectId
  scalar Decimal128


  type Mutation {
    createUser(
      firstName: String!, 
      lastName: String!, 
      email: String!, 
      phoneNumber: Int!, 
      companyName: String!, 
      password: String!
    ): User
    updateUser(input: UserInput): User
    createProduct(
      title: String!
      description: String!
      city_of_origin: String!
      certification: JSON!
      province_of_origin: String!
      country_of_origin:String!
      grade: JSON!
      size: String!
      gmo: Boolean!
      washed: Boolean!
      store_temperature_range: String!
      store_humidity:String!
      chill_damage_sensitive: Boolean!
      pack_weight: Float!
      price: Float!
      minimum_quantity: Int!
      available: Date!
      createdAt: Date
      updatedAt: Date
    ):Product
    addProductCart(
      userId: ObjectId!
      productId: ObjectId!
      quantity: Int!
    ):Boolean
  }

  type User {
    id: ObjectId
    firstName: String!
    lastName: String!
    email: String!
    phoneNumber: Int!
    companyName: String!
    password: String!
    createdAt: Date
    updatedAt: Date
  }

  type Product {
    id: ObjectId!
    title: String!
    description: String!
    city_of_origin: String!
    certification: JSON!
    province_of_origin: String!
    country_of_origin:String!
    grade: JSON!
    size: String!
    gmo: Boolean!
    washed: Boolean!
    store_temperature_range: String!
    store_humidity:String!
    chill_damage_sensitive: Boolean!
    pack_weight: Decimal128!
    price: Decimal128!
    minimum_quantity: Int!
    available: Date!
    createdAt: Date
    updatedAt: Date
  }
  
  type OrderCartItem {
    id: ObjectId!
    user_id: ObjectId!
    product_id: ObjectId!
    quantity: Int!
    createdAt: Date
    updatedAt: Date
  }

  input UserInput {
    firstName: String!
    lastName: String!
    email: String!
    phoneNumber: Int!
    companyName: String!
    password: String!
  }

  type Query {
    hello: String
    getUsers: [User]
    getUser(email: String): [User]
    getAllProducts: [Product]
    getProduct(productId: ObjectId!): [Product]
    getOrderCartItems(userId: ObjectId): [OrderCartItem]
    getOrderSummaryProduct (userId: ObjectId): [Product]
  }

`;

module.exports = typeDefs;